rules_version = '2';

// By default, deny all reads and writes
service firebase.storage {
  match /b/{bucket}/o {
    // Allow avatar uploads for any authenticated user, but only for their own UID folder.
    // Limit file size to 5MB and content type to images.
    match /upload/avatars/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
                    && request.auth.uid == userId
                    && request.resource.size < 5 * 1024 * 1024
                    && request.resource.contentType.matches('image/.*');
    }
    
    // Allow post image uploads for any authenticated user to their own UID folder.
    match /upload/posts/{userId}/{allPaths=**} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == userId;
    }

    // Allow video uploads for any authenticated user to their own UID folder.
    match /upload/videos/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId
                    && request.resource.size < 50 * 1024 * 1024 // 50MB
                    && request.resource.contentType.matches('video/.*');
    }
    
    // **NEW RULE for DM Audio**
    // Allow audio uploads within a specific DM chat folder.
    // The user's UID must be part of the chat folder name.
    // This rule allows authenticated users to upload audio files up to 10MB to their DMs.
    match /dms/{chatId}/audio/{fileName} {
      allow read, write: if request.auth != null
                          && request.auth.uid in chatId.split('_')
                          && request.resource.size < 10 * 1024 * 1024
                          && request.resource.contentType == 'audio/webm';
    }

    // Allow image uploads within a DM chat folder.
    match /dms/{chatId}/{folder}/{fileName} {
        allow read, write: if request.auth != null
                            && request.auth.uid in chatId.split('_')
                            && request.resource.contentType.matches('image/.*');
    }

    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
