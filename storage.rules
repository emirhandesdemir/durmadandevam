
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Allow public read for all files by default.
    // For a production app, you might want to tighten these rules.
    match /{allPaths=**} {
      allow read;
    }

    // --- WRITE RULES ---

    // Allow a user to write to their own avatar path.
    match /upload/avatars/{userId}/{allPaths=**} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow a user to write to their own post upload path.
    match /upload/posts/{userId}/{allPaths=**} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow a user to write to a room's upload path.
    // A more secure rule would check if the user is a participant in Firestore.
    match /upload/rooms/{roomId}/{allPaths=**} {
      allow write: if request.auth != null;
    }

    // Allow a user to upload to a DM chat they are part of.
    // The chatId is structured as 'uid1_uid2', so this check ensures
    // the uploader's ID is part of the chatId.
    match /dms/{chatId}/{allPaths=**} {
      allow write: if request.auth != null && chatId.matches(request.auth.uid);
    }
  }
}
