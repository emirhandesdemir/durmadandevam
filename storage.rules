rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Avatars: Users can only write to their own avatar path. Anyone can read.
    match /upload/avatars/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Posts: Authenticated users can write. Anyone can read.
    match /upload/posts/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Room Cover Images: Only authenticated users can write. Anyone can read.
    match /upload/rooms/{roomId}/{fileName} {
        allow read: if true;
        allow write: if request.auth != null;
    }
    
    // Room Media: Only authenticated users can write. Anyone can read.
     match /upload/rooms/{roomId}/{mediaType}/{fileName} {
        allow read: if true;
        allow write: if request.auth != null;
    }

    // Direct Messages: Only participants of the chat can read/write.
    // The chatId is composed of two UIDs, sorted and joined by '_'.
    // We check if the requesting user's UID is part of the chatId string.
    match /dms/{chatId}/{mediaType}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid in chatId.split('_');
    }
  }
}
