rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Allow admin users to read and write all files.
    match /{allPaths=**} {
      allow read, write: if request.auth != null && get(/databases/{database}/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Avatars: Any authenticated user can upload their own avatar.
    match /avatars/{userId}/{allPaths=**} {
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    // Avatars: Anyone can read avatars.
    match /avatars/{userId}/{allPaths=**} {
        allow read;
    }

    // Post uploads: Authenticated users can upload to their own folder.
    match /upload/posts/{userId}/{allPaths=**} {
        allow write: if request.auth != null && request.auth.uid == userId;
    }
    // Post uploads: Anyone can read posts.
    match /upload/posts/{userId}/{allPaths=**} {
        allow read;
    }

    // DM uploads: Allow users to write to a chat if they are a participant.
    match /dm_uploads/{chatId}/{fileName} {
      allow write: if request.auth != null &&
                      exists(/databases/$(database)/documents/directMessagesMetadata/$(chatId)) &&
                      request.auth.uid in get(/databases/$(database)/documents/directMessagesMetadata/$(chatId)).data.participantUids;

      allow read: if request.auth != null &&
                     exists(/databases/$(database)/documents/directMessagesMetadata/$(chatId)) &&
                     request.auth.uid in get(/databases/$(database)/documents/directMessagesMetadata/$(chatId)).data.participantUids;
    }
    
    // Room music uploads: Only room participants can upload music.
    match /music/{roomId}/{fileName} {
        allow read, write: if request.auth != null &&
                            exists(/databases/$(database)/documents/rooms/$(roomId)) &&
                            get(/databases/$(database)/documents/rooms/$(roomId)).data.participants.hasAny([request.auth.uid]);
    }
  }
}
