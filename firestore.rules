rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // General user profiles can be read by anyone, but only the owner can write.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }
    
    // Notifications can only be accessed by the recipient.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write, delete: if request.auth.uid == userId;
    }

    // Profile viewers can only be written to, not read by clients.
    match /users/{userId}/profileViewers/{viewerId} {
        allow read: if false; // Clients should not be able to list viewers
        allow write: if request.auth.uid == viewerId;
    }

    // Direct Messages
    match /directMessagesMetadata/{chatId} {
      allow read: if request.auth.uid in resource.data.participantUids;
      // Writes are handled by server actions.
      allow write: if false; 
    }
    match /directMessages/{chatId}/messages/{messageId} {
      allow read: if get(/databases/$(database)/documents/directMessagesMetadata/$(chatId)).data.participantUids[0] == request.auth.uid || get(/databases/$(database)/documents/directMessagesMetadata/$(chatId)).data.participantUids[1] == request.auth.uid;
       // Writes are handled by server actions.
      allow write: if false;
    }
    
    // Rooms are public
    match /rooms/{roomId} {
      allow read: if true;
      allow create: if request.auth != null;
      // Only the owner can delete or significantly update a room.
      allow update, delete: if request.auth.uid == resource.data.createdBy.uid;
    }
    
    // Room subcollections
    match /rooms/{roomId}/{subcollection}/{docId} {
        // Anyone can read messages and other public subcollections
        allow read: if true;
        // Only authenticated users can write (create/update/delete)
        allow write: if request.auth != null;
    }

    // Reports can only be created by authenticated users. Admins can read them.
    match /reports/{reportId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null;
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Audit logs are admin-only
    match /auditLogs/{logId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Configuration can be read by anyone, written by admins.
    match /config/{configId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Posts can be read by anyone, written by their owner.
    match /posts/{postId} {
        allow read: if true;
        allow create: if request.auth.uid == request.resource.data.uid;
        allow update, delete: if request.auth.uid == resource.data.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Comments can be read by anyone, written by their owner.
    match /posts/{postId}/comments/{commentId} {
        allow read: if true;
        allow create: if request.auth.uid == request.resource.data.uid;
        allow update, delete: if request.auth.uid == resource.data.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Live streams can be read by anyone, written only by their host or an admin
    match /lives/{liveId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if request.auth.uid == resource.data.hostId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow delete: if request.auth.uid == resource.data.hostId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Matchmaking Queue
    match /matchQueue/{userId} {
      allow read: if request.auth != null; // Allow reading to check for matches
      allow create: if request.auth.uid == userId; // Users can only add themselves
      allow delete: if request.auth.uid == userId; // Users can only remove themselves
      allow update: if false; // Prevent modification
    }
    
    // Temporary Match Rooms
    match /matchRooms/{matchId} {
      allow read: if request.auth.uid in resource.data.participantUids;
      allow write: if request.auth.uid in resource.data.participantUids;
    }
    
     // Temporary Match Room Messages
    match /matchRooms/{matchId}/messages/{messageId} {
      allow read, write: if get(/databases/$(database)/documents/matchRooms/$(matchId)).data.participantUids[0] == request.auth.uid || get(/databases/$(database)/documents/matchRooms/$(matchId)).data.participantUids[1] == request.auth.uid;
    }
  }
}

    