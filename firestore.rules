rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      // Kullanıcılar sadece kendi belirli alanlarını güncelleyebilir. Rol gibi alanlar admin'e özeldir.
      allow update: if isOwner(userId) && !(request.resource.data.role != resource.data.role);
    }
    
    match /users/{userId}/notifications/{notificationId} {
        allow read, write: if isOwner(userId);
    }

    match /users/{userId}/profileViewers/{viewerId} {
      allow write: if request.auth.uid == viewerId;
      allow read: if isOwner(userId);
    }

    // Admin-only collections
    match /config/{docId} {
      allow read: if request.auth != null; // Tüm kullanıcılar okuyabilir
      allow write: if isAdmin(); // Sadece adminler yazabilir
    }
    
    match /game_questions/{questionId} {
      allow read: if true; // Herkes soruları okuyabilir
      allow write: if isAdmin(); // Sadece adminler soru ekleyebilir/silebilir
    }

    match /auditLogs/{logId} {
      allow read: if isAdmin();
      allow write: if request.auth != null; // Cloud function'lar tarafından yazılır.
    }
    
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow create: if request.auth != null;
    }
    
    match /posts/{postId} {
        allow read: if true;
        allow create: if isOwner(request.resource.data.uid);
        allow update: if isOwner(resource.data.uid);
        allow delete: if isOwner(resource.data.uid) || isAdmin();
    }
    
    match /posts/{postId}/comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        // Yorumu sadece sahibi veya admin silebilir.
        allow delete: if isOwner(resource.data.uid) || isAdmin();
    }
    
    match /rooms/{roomId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth.uid in resource.data.moderators;
      allow delete: if isOwner(resource.data.createdBy.uid) || isAdmin();
    }

    match /rooms/{roomId}/{subcollection}/{docId} {
      // Oda katılımcıları alt koleksiyonları okuyabilir/yazabilir
      allow read, write: if request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.participants[0].uid;
    }

    match /directMessages/{chatId}/{messages}/{messageId} {
        // Kullanıcılar sadece katıldıkları sohbetlerdeki mesajları okuyabilir ve yazabilir.
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/directMessagesMetadata/$(chatId)).data.participantUids[0] == request.auth.uid || get(/databases/$(database)/documents/directMessagesMetadata/$(chatId)).data.participantUids[1] == request.auth.uid;
      }
      match /directMessagesMetadata/{chatId} {
        allow read, update: if request.auth.uid in resource.data.participantUids;
        allow create: if request.auth.uid in request.resource.data.participantUids;
      }

  }
}
