rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Kullanıcılar (users) koleksiyonu için kurallar
    match /users/{userId} {
      // Herkes kendi profilini okuyabilir ve güncelleyebilir.
      // Diğer kullanıcılar ise sadece herkese açık profilleri okuyabilir.
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId;
      // Yeni kullanıcı oluşturma (kayıt olma) herkese açık.
      allow create: if request.auth.uid == userId;

      // Kullanıcının alt koleksiyonlarına erişim
      match /profileViewers/{viewerId} {
        // Sadece profil sahibi kendi ziyaretçilerini görebilir.
        allow read: if request.auth.uid == userId;
        // Ziyaret eden kişi kendi ziyaret kaydını oluşturabilir/güncelleyebilir.
        allow write: if request.auth.uid == viewerId;
      }
    }
    
    // Gönderiler (posts) koleksiyonu için kurallar
    match /posts/{postId} {
        // Herkes gönderileri okuyabilir.
        allow read: if request.auth != null;
        // Sadece giriş yapmış kullanıcılar gönderi oluşturabilir.
        allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
        // Sadece gönderi sahibi gönderiyi güncelleyebilir veya silebilir.
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    
    // Yorumlar (comments) alt koleksiyonu için kurallar
    match /posts/{postId}/comments/{commentId} {
        // Herkes yorumları okuyabilir.
        allow read: if request.auth != null;
        // Sadece giriş yapmış kullanıcılar yorum yapabilir.
        allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
        // Sadece yorum sahibi yorumu silebilir.
        allow delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }

    // Bildirimler (notifications) koleksiyonu için kurallar
    match /notifications/{notificationId} {
        // Kullanıcılar sadece kendilerine gelen bildirimleri okuyabilir, yazabilir, güncelleyebilir veya silebilir.
        allow read, write, update, delete: if request.auth != null && request.auth.uid == resource.data.recipientId;
        // Yeni bildirim oluşturmaya sunucu eylemleri üzerinden izin verilir, bu nedenle 'create' kuralı daha esnek olabilir,
        // ancak en güvenlisi yine de alıcıya odaklanmaktır.
        allow create: if request.auth != null; // Sunucu eylemi kimliği doğrulanmış olmalı.
    }
    
    // Odalar (rooms) koleksiyonu için kurallar
    match /rooms/{roomId} {
        // Sadece giriş yapmış kullanıcılar odaları okuyabilir, oluşturabilir ve güncelleyebilir.
        allow read, create, update: if request.auth != null;
        // Sadece oda sahibi odayı silebilir.
        allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy.uid;
    }
    
    // Oda içi alt koleksiyonlar (mesajlar, sesli sohbet vb.)
    match /rooms/{roomId}/{subcollection}/{docId} {
      // Odaya dahil olan herkes okuyabilir ve yazabilir (create, update).
      // Bu, Firestore'da `get()` kullanarak odanın katılımcı listesini kontrol etmeyi gerektirir.
      allow read, write: if request.auth != null && exists(/databases/$(database)/documents/rooms/$(roomId)) 
                            && request.auth.uid in get(/databases/$(database)/documents/rooms/$(roomId)).data.participants;
    }
    
    // Konfigürasyon (config) koleksiyonu için kurallar
    match /config/{configId} {
        // Herkes ayarları okuyabilir (örn: özellik bayrakları).
        allow read: if true;
        // Sadece yöneticiler (admin) ayarları yazabilir/güncelleyebilir/silebilir.
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // YENİ: Direkt Mesajlaşma (directMessages) için kurallar
    function isParticipant(chatId) {
      return request.auth.uid in string(chatId).split('_');
    }
    
    match /directMessagesMetadata/{chatId} {
      // Sadece katılımcılar kendi sohbet metadatasını okuyabilir veya güncelleyebilir.
      allow read, update: if isParticipant(chatId);
      // Yeni bir sohbet metadatası sadece katılımcılar tarafından oluşturulabilir.
      allow create: if isParticipant(chatId) && request.auth.uid in request.resource.data.participantUids;
    }
    
    match /directMessages/{chatId}/messages/{messageId} {
      // Sadece katılımcılar mesajları okuyabilir.
      allow read: if isParticipant(chatId);
      
      // Mesaj oluşturma: Sadece katılımcılar ve gönderen kendisi ise.
      allow create: if isParticipant(chatId) && request.auth.uid == request.resource.data.senderId;
      
      // Mesaj güncelleme (Düzenleme):
      // 1. Kullanıcı giriş yapmış olmalı.
      // 2. Kullanıcı, mesajı gönderen kişi olmalı.
      // 3. Mesaj, gönderildikten sonra 5 dakika içinde düzenlenmeli.
      // 4. Sadece 'text', 'edited', ve 'editedAt' alanları değiştirilebilir.
      allow update: if request.auth.uid == resource.data.senderId
                      && request.time < resource.data.createdAt + duration.value(5, 'm')
                      && request.resource.data.keys().hasOnly(['text', 'edited', 'editedAt', 'senderId', 'receiverId', 'createdAt', 'read']); // Değişmeyen alanları da ekle
                      
      // Mesaj silmeye şimdilik izin verilmiyor.
      allow delete: if false;
    }
  }
}
